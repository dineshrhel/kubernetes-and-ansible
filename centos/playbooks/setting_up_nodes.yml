---
- hosts: all
  vars_files:
  - env_variables 
  tasks:
  - name: Creating a repository file for Kubernetes
    file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch

  
  - name: Creating a repository file for Docker
    file:
     path: /etc/yum.repos.d/docker-ce.repo
     state: touch


  - name: Adding repository details in Docker repo file.
    blockinfile:
     path: /etc/yum.repos.d/docker-ce.repo
     block: |
       [docker-ce-stable]
       name=Docker CE Stable - $basearch
       baseurl=https://download.docker.com/linux/centos/$releasever/$basearch/stable
       enabled=1
       gpgcheck=0

  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
     path: /etc/yum.repos.d/kubernetes.repo
     block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=0
      repo_gpgcheck=0
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Installing required packages
    yum:
     name: "{{ item }}"
     state: present
    with_items: "{{ packages }}"

  - name: To create json file for converting cgroupdriver
    file:
     path: /etc/docker/
     state: directory
     
  - name: To create json file for converting cgroupdriver
    file:
     path: /etc/docker/daemon.json
     state: absent

  - name: To create json file for converting cgroupdriver
    file:
     path: /etc/docker/daemon.json
     state: touch
     mode: "0644"

  - name: To create docker service directory
    file:
     path: /etc/systemd/system/docker.service.d
     state: directory

  - name: To delete containerid config file
    file:
     path: /etc/containerd/config.toml
     state: absent

  - name: Append json file into docker config
    blockinfile:
     path: /etc/docker/daemon.json
     block: |
       {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
          "max-size": "100m"
          },
          "storage-driver": "overlay2"
       }
     marker: ""
  - name: To reload service config
    shell: "systemctl daemon-reload"

  - name: Starting and Enabling the required services
    service:
     name: "{{ item }}"
     state: started
     enabled: yes
    with_items: "{{ services }}"

